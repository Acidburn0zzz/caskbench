#!/usr/bin/python

# This script intends to operate caskbench in a manner that
# will replicate the results of canvas_perf.js, but in C++.
#
# ref:
# http://flashcanvas.net/examples/dl.dropbox.com/u/1865210/mindcat/canvas_perf.html

CASKBENCH = 'caskbench'

perfdefs = [
    [ "hline",                 1000,  30 ],
    [ "vline",                 1000,  15 ],
    [ "line",                  1000,   6 ],
    [ "rect",                  1000,   5 ],
    [ "fill_rect",              500,   5 ],
    [ "lines",                 1000,   8 ],
    [ "arc",                   1000,   4 ],
    [ "fill_arc",              1000,   7 ],
    [ "bezier",                1000,   3 ],
    [ "fill_bezier",           1000,   4 ],
    [ "quad",                  1000,   4 ],
    [ "curves",                  50,   5 ],
    [ "fill_curves",             50,   8 ],
    [ "stroke_star",           1000,   7 ],
    [ "fill_star",             1000,  12 ],
    [ "transform",               10,   0.2 ],
    [ "image",                  100,   0.3 ],
    [ "image_scale",            100,   0.8 ],
    [ "image_rotate",            15,   0.3 ],
    [ "linear_gradient",        100,   2 ],
    [ "radial_gradient",        100,   0.3 ],
    [ "text",                   100,   0.6 ],
    [ "clip",                   100,   0.8 ]
    ]

results = []
for testcase in perfdefs:
    cmd = [ CASKBENCH, testcase[0],
            '-D', 'skia',
            '-w', 480,
            '-h', 480,
            '-i', '1',
            '-s', str(testcase[1])
            ]
    print ' '.join(cmd)

    # TODO: Execute cmd, retrieve JSON back with value
    value = testcase[2] # FIXME
    ratio = value / testcase[2]

    results.append({
        'testcase': testcase[0],
        'ratio': ratio
        })

# Calculate the score
total = 0
for result in results:
    print "%s: %3.2f" %(result['testcase'], result['ratio'])
    total += 1.0 / result['ratio']

if total > 0:
    score = (len(perfdefs) / total)
    print "Total Score: %3.2f" %(score)
